Terminals unused in grammar

    TOKEN_ERROR


Grammar

    0 $accept: program $end

    1 program: expr TOKEN_SEMI

    2 expr: expr TOKEN_PLUS term
    3     | expr TOKEN_MINUS term
    4     | term

    5 term: term TOKEN_MUL factor
    6     | term TOKEN_DIV factor
    7     | factor

    8 factor: TOKEN_MINUS factor
    9       | TOKEN_LPAREN expr TOKEN_RPAREN
   10       | TOKEN_INT
   11       | TOKEN_FLOAT


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    TOKEN_INT (258) 10
    TOKEN_FLOAT (259) 11
    TOKEN_PLUS (260) 2
    TOKEN_MINUS (261) 3 8
    TOKEN_MUL (262) 5
    TOKEN_DIV (263) 6
    TOKEN_LPAREN (264) 9
    TOKEN_RPAREN (265) 9
    TOKEN_SEMI (266) 1
    TOKEN_ERROR (267)


Nonterminals, with rules where they appear

    $accept (13)
        on left: 0
    program (14)
        on left: 1
        on right: 0
    expr (15)
        on left: 2 3 4
        on right: 1 2 3 9
    term (16)
        on left: 5 6 7
        on right: 2 3 4 5 6
    factor (17)
        on left: 8 9 10 11
        on right: 5 6 7 8


State 0

    0 $accept: • program $end

    TOKEN_INT     shift, and go to state 1
    TOKEN_FLOAT   shift, and go to state 2
    TOKEN_MINUS   shift, and go to state 3
    TOKEN_LPAREN  shift, and go to state 4

    program  go to state 5
    expr     go to state 6
    term     go to state 7
    factor   go to state 8


State 1

   10 factor: TOKEN_INT •

    $default  reduce using rule 10 (factor)


State 2

   11 factor: TOKEN_FLOAT •

    $default  reduce using rule 11 (factor)


State 3

    8 factor: TOKEN_MINUS • factor

    TOKEN_INT     shift, and go to state 1
    TOKEN_FLOAT   shift, and go to state 2
    TOKEN_MINUS   shift, and go to state 3
    TOKEN_LPAREN  shift, and go to state 4

    factor  go to state 9


State 4

    9 factor: TOKEN_LPAREN • expr TOKEN_RPAREN

    TOKEN_INT     shift, and go to state 1
    TOKEN_FLOAT   shift, and go to state 2
    TOKEN_MINUS   shift, and go to state 3
    TOKEN_LPAREN  shift, and go to state 4

    expr    go to state 10
    term    go to state 7
    factor  go to state 8


State 5

    0 $accept: program • $end

    $end  shift, and go to state 11


State 6

    1 program: expr • TOKEN_SEMI
    2 expr: expr • TOKEN_PLUS term
    3     | expr • TOKEN_MINUS term

    TOKEN_PLUS   shift, and go to state 12
    TOKEN_MINUS  shift, and go to state 13
    TOKEN_SEMI   shift, and go to state 14


State 7

    4 expr: term •
    5 term: term • TOKEN_MUL factor
    6     | term • TOKEN_DIV factor

    TOKEN_MUL  shift, and go to state 15
    TOKEN_DIV  shift, and go to state 16

    $default  reduce using rule 4 (expr)


State 8

    7 term: factor •

    $default  reduce using rule 7 (term)


State 9

    8 factor: TOKEN_MINUS factor •

    $default  reduce using rule 8 (factor)


State 10

    2 expr: expr • TOKEN_PLUS term
    3     | expr • TOKEN_MINUS term
    9 factor: TOKEN_LPAREN expr • TOKEN_RPAREN

    TOKEN_PLUS    shift, and go to state 12
    TOKEN_MINUS   shift, and go to state 13
    TOKEN_RPAREN  shift, and go to state 17


State 11

    0 $accept: program $end •

    $default  accept


State 12

    2 expr: expr TOKEN_PLUS • term

    TOKEN_INT     shift, and go to state 1
    TOKEN_FLOAT   shift, and go to state 2
    TOKEN_MINUS   shift, and go to state 3
    TOKEN_LPAREN  shift, and go to state 4

    term    go to state 18
    factor  go to state 8


State 13

    3 expr: expr TOKEN_MINUS • term

    TOKEN_INT     shift, and go to state 1
    TOKEN_FLOAT   shift, and go to state 2
    TOKEN_MINUS   shift, and go to state 3
    TOKEN_LPAREN  shift, and go to state 4

    term    go to state 19
    factor  go to state 8


State 14

    1 program: expr TOKEN_SEMI •

    $default  reduce using rule 1 (program)


State 15

    5 term: term TOKEN_MUL • factor

    TOKEN_INT     shift, and go to state 1
    TOKEN_FLOAT   shift, and go to state 2
    TOKEN_MINUS   shift, and go to state 3
    TOKEN_LPAREN  shift, and go to state 4

    factor  go to state 20


State 16

    6 term: term TOKEN_DIV • factor

    TOKEN_INT     shift, and go to state 1
    TOKEN_FLOAT   shift, and go to state 2
    TOKEN_MINUS   shift, and go to state 3
    TOKEN_LPAREN  shift, and go to state 4

    factor  go to state 21


State 17

    9 factor: TOKEN_LPAREN expr TOKEN_RPAREN •

    $default  reduce using rule 9 (factor)


State 18

    2 expr: expr TOKEN_PLUS term •
    5 term: term • TOKEN_MUL factor
    6     | term • TOKEN_DIV factor

    TOKEN_MUL  shift, and go to state 15
    TOKEN_DIV  shift, and go to state 16

    $default  reduce using rule 2 (expr)


State 19

    3 expr: expr TOKEN_MINUS term •
    5 term: term • TOKEN_MUL factor
    6     | term • TOKEN_DIV factor

    TOKEN_MUL  shift, and go to state 15
    TOKEN_DIV  shift, and go to state 16

    $default  reduce using rule 3 (expr)


State 20

    5 term: term TOKEN_MUL factor •

    $default  reduce using rule 5 (term)


State 21

    6 term: term TOKEN_DIV factor •

    $default  reduce using rule 6 (term)
